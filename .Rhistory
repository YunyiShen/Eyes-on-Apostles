y <- runif(50) <= 1/(1+exp(-xb-6))
mean(y)
ww1 <- glmnet(x,y, family = binomial(), offset = rep(6,5000))
y <- runif(5000) <= 1/(1+exp(-xb-6))
ww1 <- glmnet(x,y, family = binomial(), offset = rep(6,5000))
coef(ww1)
ww <- glmnet(x,y, family = "binomial", offset = rep(6,5000))
coef(ww)
coef(ww)[,1]
coef(ww1)[,1]
ww <- glmnet(x,y, family = "binomial", offset = rep(6,5000), intercept = F)
ww1 <- glmnet(x,y, family = binomial(), offset = rep(6,5000), intercept = F)
coef(ww1)[,1]
coef(ww)[,1]
coef(ww)[,1:5]
coef(ww1)[,1:5]
coef(ww)[,1:10]
coef(ww1)[,1:10]
234/146
1.6*12
log10(2)
468/50*12
library(rgl)
open3d()
spheres3d(0,0,0)
mc2 <- read.csv("clean_mc2.csv")
?occu
??occu
library(flexdashboard)
library(ggplot2)
library(leaflet)
library(sp)
library(geojsonio)
library(jsonlite)
library(forecast) # to forcast detection rate
library(dplyr)
library(shiny)
APIS_bound <- rgdal::readOGR("maps/APIS_boundaries.geojson")
plot(APIS_bound)
APIS_bound
names(APIS_bound)
APIS_bound$TRACT_ID
APIS_map <- leaflet(APIS_bound) %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3,
label = ~paste0(TRACT_ID))
APIS_map
?`addAttrToGeom,SpatialPoints,data.frame-method`
APIS_map <- leaflet(APIS_bound) %>%
#addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3,
label = ~paste0(TRACT_ID))
APIS_map
?checkboxInput
addPolygons()
?addPolygons
setwd("/media/yunyi/Academia/Misc-Proj/In-Eyes-on-Apostles")
shinyApp()
shinyApp("app.R")
runApp()
runApp()
?dashboardHeader
?column
?sidebarMenu
runApp()
runApp()
APIS_map %>% addTiles()
runApp()
runApp()
runApp()
?renderPlot
runApp()
runApp('example_shiny.R')
runApp()
plot(1:10,1:10)
runApp()
runApp()
runApp()
leaflet::addGeoJSON()
?leaflet::addGeoJSON
# read necessary data
APIS_bound <- rgdal::readOGR("maps/APIS_boundaries.geojson")
presence_map <- read.csv("data/PA_all_full.csv",row.names = 1)[-c(150:155),]
spp_list <- colnames(presence_map)
camera_loci <- read.csv("data/CT_loci.csv")[-c(150:155),-c(6,7)]
camera_loci$richness <- rowSums(presence_map)
camera_loci$spplist<- sapply(camera_loci$name, function(site, sppmat){
paste(colnames(sppmat)[sppmat[site,]!=0], collapse = " <br> ")
}, as.matrix(presence_map))
APIS_map <- leaflet(APIS_bound) %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3,
label = ~paste0(TRACT_ID))
PA <- presence_map[,species] == 1
species = "Deer"
PA <- presence_map[,species] == 1
species_presense <- camera_loci[PA,] %>%  geojson_json(lat = "lat", lon = "lon")
species_absense <- camera_loci[!PA,] %>%  geojson_json(lat = "lat", lon = "lon")
runApp()
runApp()
runApp()
?SpatialPointsDataFrame
PA <- SpatialPointsDataFrame( camera_loci[,c("lon","lat")], camera_loci)
plot(PA)
PA
PA$richness
camera_loci$PA <- (presence_map[,species] == 1)
PA <- SpatialPointsDataFrame( camera_loci[,c("lon","lat")], camera_loci)
PA$PA
pal <- colorFactor(c("navy", "red"), domain = c(TRUE, FALSE))
camera_loci$PA_spp <- (presence_map[,species] == 1)
PA <- SpatialPointsDataFrame( camera_loci[,c("lon","lat")], camera_loci)
APIS_map <- APIS_map %>%
addCircleMarkers(data = PA, radius = ifelse(input$bubble, ~richness, 5),
color = ifelse(input$bubble, "red", ~pal(PA_spp)))
input <- list()
input$species <- "Deer"
input$bubble <- TRUE
APIS_map <- APIS_map %>%
addCircleMarkers(data = PA, radius = ifelse(input$bubble, ~richness, 5),
color = ifelse(input$bubble, "red", ~pal(PA_spp)))
APIS_map <- APIS_map %>%
addCircleMarkers(data = PA, radius = 10,#ifelse(input$bubble, ~richness, 5),
color = "red" #ifelse(input$bubble, "red", ~pal(PA_spp))
)
APIS_map
ifelse(input$bubble, ~richness, 5)
APIS_map <- APIS_map %>%
addCircleMarkers(data = PA, radius = "~richness",#ifelse(input$bubble, ~richness, 5),
color = "red" #ifelse(input$bubble, "red", ~pal(PA_spp))
)
APIS_map
APIS_map <- APIS_map %>%
addCircleMarkers(data = PA, radius = ~richness,#ifelse(input$bubble, ~richness, 5),
color = "red" #ifelse(input$bubble, "red", ~pal(PA_spp))
)
APIS_map
APIS_map <- leaflet(APIS_bound) %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3,
label = ~paste0(TRACT_ID))
APIS_map %>%
addCircleMarkers(data = PA, radius = "~richness",#ifelse(input$bubble, ~richness, 5),
color = "red" #ifelse(input$bubble, "red", ~pal(PA_spp))
)
APIS_map %>%
addCircleMarkers(data = PA, radius = ~richness,#ifelse(input$bubble, ~richness, 5),
color = "red" #ifelse(input$bubble, "red", ~pal(PA_spp))
)
APIS_map <- APIS_map %>%
addCircleMarkers(data = PA, radius = ~richness,#ifelse(input$bubble, ~richness, 5),
color = "blue" #ifelse(input$bubble, "red", ~pal(PA_spp))
)
APIS_map
APIS_map <- APIS_map %>%
addCircleMarkers(data = PA, radius = ~richness/2,#ifelse(input$bubble, ~richness, 5),
color = "blue" #ifelse(input$bubble, "red", ~pal(PA_spp))
)
APIS_map <- leaflet(APIS_bound) %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3,
label = ~paste0(TRACT_ID))
APIS_map %>%
addCircleMarkers(data = PA, radius = ~richness/2,#ifelse(input$bubble, ~richness, 5),
color = "blue" #ifelse(input$bubble, "red", ~pal(PA_spp))
)
APIS_map <- APIS_map %>% addTiles()
APIS_map %>%
addCircleMarkers(data = PA, radius = ~richness/2,#ifelse(input$bubble, ~richness, 5),
color = "blue" #ifelse(input$bubble, "red", ~pal(PA_spp))
)
PA$spplist
APIS_map %>%
addCircleMarkers(data = PA, radius = ~richness/2,#ifelse(input$bubble, ~richness, 5),
color = "blue" #ifelse(input$bubble, "red", ~pal(PA_spp))
) %>%
addMarkers(~lon, ~lat, popup = ~as.character(spplist), label = ~as.character(spplist))
APIS_map %>%
addCircleMarkers(data = PA, radius = ~richness/2,#ifelse(input$bubble, ~richness, 5),
color = "blue" #ifelse(input$bubble, "red", ~pal(PA_spp))
) %>%
addMarkers(~lon, ~lat, popup = ~as.character(spplist), label = ~as.character(spplist), data = PA)
APIS_map %>%
addCircleMarkers(data = PA, radius = ~richness/2,
color = "blue",
popup = ~as.character(spplist), label = ~as.character(spplist)
)
camera_loci$spplist<- sapply(camera_loci$name, function(site, sppmat){
paste(colnames(sppmat)[sppmat[site,]!=0], collapse = " \n ")
}, as.matrix(presence_map))
camera_loci$PA_spp <- (presence_map[,species] == 1)
PA <- SpatialPointsDataFrame( camera_loci[,c("lon","lat")], camera_loci)
APIS_map %>%
addCircleMarkers(data = PA, radius = ~richness/2,
color = "blue",
popup = ~as.character(spplist), label = ~as.character(spplist)
)
paste(colnames(sppmat)[sppmat[site,]!=0], collapse = " <br/> ")
camera_loci$spplist<- sapply(camera_loci$name, function(site, sppmat){
paste(colnames(sppmat)[sppmat[site,]!=0], collapse = " <br/> ")
}, as.matrix(presence_map))
APIS_map %>%
addCircleMarkers(data = PA, radius = ~richness/2,
color = "blue",
popup = ~as.character(spplist), label = ~as.character(spplist)
)
APIS_map %>%
addCircleMarkers(data = PA, radius = ~richness/2,
color = "blue",
popup = ~HTML(spplist), label = ~HTML(spplist)
)
paste(colnames(sppmat)[sppmat[site,]!=0], collapse = " <br> ")
camera_loci$spplist<- sapply(camera_loci$name, function(site, sppmat){
paste(colnames(sppmat)[sppmat[site,]!=0], collapse = " <br> ")
}, as.matrix(presence_map))
APIS_map %>%
addCircleMarkers(data = PA, radius = ~richness/2,
color = "blue",
popup = ~HTML(spplist), label = ~HTML(spplist)
)
APIS_map %>%
addCircleMarkers(data = PA, radius = ~richness/2,
color = "navy",
popup = ~HTML(spplist), label = ~HTML(spplist)
)
camera_loci$spplist<- sapply(camera_loci$name, function(site, sppmat){
paste(colnames(sppmat)[sppmat[site,]!=0], collapse = " <p> ")
}, as.matrix(presence_map))
APIS_map %>%
addCircleMarkers(data = PA, radius = ~richness/2,
color = "navy",
popup = ~HTML(spplist), label = ~HTML(spplist)
)
camera_loci$spplist<- sapply(camera_loci$name, function(site, sppmat){
paste("<p>",paste(colnames(sppmat)[sppmat[site,]!=0], collapse = " <p></p> "),"</p>")
}, as.matrix(presence_map))
APIS_map <- APIS_map %>%
addCircleMarkers(data = PA, radius = ~richness/2,
color = "navy",
popup = ~HTML(spplist), label = ~HTML(spplist)
)
APIS_map %>%
addCircleMarkers(data = PA, radius = ~richness/2,
color = "navy",
popup = ~HTML(spplist), label = ~HTML(spplist)
)
APIS_map %>%
addCircleMarkers(data = PA, radius = ~richness/2,
color = "navy",
popup = ~(spplist), label = ~(spplist)
)
camera_loci$spplist<- sapply(camera_loci$name, function(site, sppmat){
paste(colnames(sppmat)[sppmat[site,]!=0], collapse = " <br> ")
}, as.matrix(presence_map))
APIS_map %>%
addCircleMarkers(data = PA, radius = ~richness/2,
color = "navy",
popup = ~(spplist), label = ~(spplist)
)
camera_loci$spplist<- sapply(camera_loci$name, function(site, sppmat){
paste(colnames(sppmat)[sppmat[site,]!=0], collapse = " ; ")
}, as.matrix(presence_map))
APIS_map %>%
addCircleMarkers(data = PA, radius = ~richness/2,
color = "navy",
popup = ~(spplist), label = ~paste("richness:",richness)
)
camera_loci$spplist<- sapply(camera_loci$name, function(site, sppmat){
paste("<p>",paste(colnames(sppmat)[sppmat[site,]!=0], collapse = " <p></p> "),"</p>")
}, as.matrix(presence_map))
camera_loci$PA_spp <- (presence_map[,species] == 1)
PA <- SpatialPointsDataFrame( camera_loci[,c("lon","lat")], camera_loci)
APIS_map <-
APIS_map %>%
addCircleMarkers(data = PA, radius = ~richness/2,
color = "navy",
popup = ~(spplist), label = ~paste("richness:",richness)
)
PA$spplist[1]
APIS_map <-
APIS_map %>%
addCircleMarkers(data = PA, radius = ~richness/2,
color = "navy",
popup = ~HTML(spplist), label = ~paste("richness:",richness)
)
camera_loci$spplist<- sapply(camera_loci$name, function(site, sppmat){
paste(colnames(sppmat)[sppmat[site,]!=0], collapse = " <br/> ")
}, as.matrix(presence_map))
camera_loci$PA_spp <- (presence_map[,species] == 1)
PA <- SpatialPointsDataFrame( camera_loci[,c("lon","lat")], camera_loci)
APIS_map <-
APIS_map %>%
addCircleMarkers(data = PA, radius = ~richness/2,
color = "navy",
popup = ~HTML(spplist), label = ~paste("richness:",richness)
)
APIS_map <-
APIS_map %>%
addCircleMarkers(data = PA, radius = ~richness/2,
color = "navy",
popup = ~as.character(spplist), label = ~paste("richness:",richness)
)
camera_loci$spplist<- sapply(camera_loci$name, function(site, sppmat){
paste(colnames(sppmat)[sppmat[site,]!=0], collapse = " ; ")
}, as.matrix(presence_map))
camera_loci$PA_spp <- (presence_map[,species] == 1)
PA <- SpatialPointsDataFrame( camera_loci[,c("lon","lat")], camera_loci)
APIS_map <-
APIS_map %>%
addCircleMarkers(data = PA, radius = ~richness/2,
color = "navy",
popup = ~as.character(spplist), label = ~paste("richness:",richness)
)
PA$spplist[1]
camera_loci$spplist<- sapply(camera_loci$name, function(site, sppmat){
paste(colnames(sppmat)[sppmat[site,]!=0], collapse = " \; ")
}, as.matrix(presence_map))
camera_loci$spplist<- sapply(camera_loci$name, function(site, sppmat){
paste(colnames(sppmat)[sppmat[site,]!=0], collapse = " \; ")
}, as.matrix(presence_map))
camera_loci$spplist<- sapply(camera_loci$name, function(site, sppmat){
paste(colnames(sppmat)[sppmat[site,]!=0], collapse = " \\; ")
}, as.matrix(presence_map))
camera_loci$PA_spp <- (presence_map[,species] == 1)
PA <- SpatialPointsDataFrame( camera_loci[,c("lon","lat")], camera_loci)
APIS_map <-
APIS_map %>%
addCircleMarkers(data = PA, radius = ~richness/2,
color = "navy",
popup = ~as.character(spplist), label = ~paste("richness:",richness)
)
APIS_map <-
APIS_map %>%
addCircleMarkers(data = PA, radius = ~richness/2,
color = "navy",
popup = ~as.character(spplist), label = ~paste("richness:",richness)
)
APIS_map %>%
addCircleMarkers(data = PA, radius = ~richness/2,
color = "navy",
popup = ~as.character(spplist), label = ~paste("richness:",richness)
)
camera_loci$spplist<- sapply(camera_loci$name, function(site, sppmat){
paste(colnames(sppmat)[sppmat[site,]!=0], collapse = " ; ")
}, as.matrix(presence_map))
camera_loci$PA_spp <- (presence_map[,species] == 1)
PA <- SpatialPointsDataFrame( camera_loci[,c("lon","lat")], camera_loci)
APIS_map %>%
addCircleMarkers(data = PA, radius = ~richness/2,
color = "navy",
popup = ~as.character(spplist), label = ~paste("richness:",richness)
)
camera_loci$spplist<- sapply(camera_loci$name, function(site, sppmat){
paste(colnames(sppmat)[sppmat[site,]!=0], collapse = " <br/> ")
}, as.matrix(presence_map))
camera_loci$PA_spp <- (presence_map[,species] == 1)
PA <- SpatialPointsDataFrame( camera_loci[,c("lon","lat")], camera_loci)
APIS_map %>%
addCircleMarkers(data = PA, radius = ~richness/2,
color = "navy",
popup = ~as.character(spplist), label = ~paste("richness:",richness)
)
APIS_map %>%
addCircleMarkers(data = PA, radius = ~richness/2,
color = "navy",
popup = ~as.character(spplist), label = ~paste("richness:",richness)
)
PA$richness/2
APIS_map %>%
addCircleMarkers(data = PA, radius = 1.5,
color = ~pal(PA_spp),
popup = ~as.character(spplist), label = ~paste("richness:",richness)
)
runApp()
runApp()
runApp()
APIS_map %>%
addCircleMarkers(data = PA, radius = 1.5,
color = ~pal(PA_spp),
popup = ~as.character(spplist), label = ~paste(input$species," presence:", PA_spp)
)
runApp()
?fitBounds
APIS_map <- leaflet(APIS_bound) %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3,
label = ~paste0(TRACT_ID)) %>%
fitBounds(lng1 = -91.05, lat1 = 46.75,
lng2 =-90.35, lat2 = 47.10)
APIS_map
leaflet(APIS_bound) %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3,
label = ~paste0(TRACT_ID)) %>%
fitBounds(lng1 = -91.05, lat1 = 46.75,
lng2 =-90.35, lat2 = 47.10)
APIS_bound$ALPHA
APIS_bound$TRACT_ID
APIS_bound
slot(APIS_bound,"bbox")
class(slot(APIS_bound,"bbox"))
APIS_bound2 <- APIS_bound
slot(APIS_bound2,"bbox")[1:4] <- c(-91.05,46.75,-90.35,47.10)
plot(APIS_bound2)
leaflet(APIS_bound2)
leaflet(APIS_bound)
leaflet(APIS_bound) %>% addPolygons()
leaflet(APIS_bound) %>% addPolygons(label = ~paste0(TRACT_ID))
leaflet(APIS_bound) %>%
addPolygons(#stroke = FALSE, smoothFactor = 0.3,
label = ~paste0(TRACT_ID)) %>%
fitBounds(lng1 = -91.05, lat1 = 46.75,
lng2 =-90.35, lat2 = 47.10)
leaflet(APIS_bound) %>%
addPolygons(#stroke = FALSE, smoothFactor = 0.3,
label = ~paste0(TRACT_ID))
APIS_map <- leaflet(APIS_bound) %>%
addPolygons(label = ~paste0(TRACT_ID))
APIS_map <- APIS_map %>% addTiles()
APIS_map
camera_loci$PA_spp <- (presence_map[,species] == 1)
PA <- SpatialPointsDataFrame( camera_loci[,c("lon","lat")], camera_loci)
APIS_map <-
APIS_map %>%
addCircleMarkers(data = PA, radius = ~richness/2,
color = "red",
popup = ~as.character(spplist), label = ~paste("richness:",richness)
)
APIS_map
APIS_map %>%
addCircleMarkers(data = PA, radius = ~richness,
color = "red",
popup = ~as.character(spplist), label = ~paste("richness:",richness)
APIS_map <-
APIS_map %>%
addCircleMarkers(data = PA, radius = ~richness,
color = "red",
popup = ~as.character(spplist), label = ~paste("richness:",richness)
)
APIS_map <-
APIS_map %>%
addCircleMarkers(data = PA, radius = ~richness,
color = "red",
popup = ~as.character(spplist), label = ~paste("richness:",richness)
)
APIS_map
APIS_map <-
APIS_map %>%
addCircleMarkers(data = PA, radius = ~richness/1.5,
color = "red",
popup = ~as.character(spplist), label = ~paste("richness:",richness)
)
APIS_map <-
APIS_map %>%
addCircleMarkers(data = PA, radius = ~richness/1.5,
color = "red",
popup = ~as.character(spplist), label = ~paste("richness:",richness)
)
APIS_map
APIS_map <- leaflet(APIS_bound) %>%
addPolygons(label = ~paste0(TRACT_ID))
APIS_map %>%
addCircleMarkers(data = PA, radius = ~richness/1.5,
color = "red",
popup = ~as.character(spplist), label = ~paste("richness:",richness)
)
APIS_map %>%
addCircleMarkers(data = PA, radius = 1.5,
color = ~pal(PA_spp),
popup = ~as.character(spplist), label = ~paste(input$species," presence:", PA_spp)
)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?menuItem
runApp()
runApp()
?menuSubItem
runApp()
runApp()
runApp()
runApp()
?icon
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
PA$Location
PA$name
runApp()
runApp()
runApp()
library(shiny)
depolyApp
shiny::runApp()
